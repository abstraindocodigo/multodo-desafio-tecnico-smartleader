version: '3.8'

services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15
    container_name: multodo_postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: multodo
      POSTGRES_USER: multodo_user
      POSTGRES_PASSWORD: multodo_password
    ports:
      - "5432:5432"
    volumes:
      - multodo_postgres_data:/var/lib/postgresql/data
    networks:
      - multodo_network

  # Backend Laravel
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multodo_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=multodo
      - DB_USERNAME=multodo_user
      - DB_PASSWORD=multodo_password
      - QUEUE_CONNECTION=database
      - MAIL_FROM_ADDRESS=noreply@multodo.com
      - MAIL_FROM_NAME=MultiTodo
    volumes:
      - ./backend:/var/www/html
      - multodo_backend_storage:/var/www/html/storage
    depends_on:
      - postgres
    networks:
      - multodo_network
    command: >
      sh -c "
        composer install --optimize-autoloader &&
        php artisan key:generate --force &&
        php artisan migrate --force &&
        php artisan db:seed --force &&
        php artisan config:cache &&
        php artisan route:cache &&
        php artisan view:cache &&
        php artisan serve --host=0.0.0.0 --port=8000
      "

  # Frontend Vue.js
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: multodo_frontend
    restart: unless-stopped
    ports:
      - "0.0.0.0:3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - multodo_network
    command: npm run dev -- --host 0.0.0.0 --port 3000 --strictPort

  # Worker para processar filas
  queue_worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: multodo_queue
    restart: unless-stopped
    environment:
      - APP_ENV=production
      - DB_CONNECTION=pgsql
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_DATABASE=multodo
      - DB_USERNAME=multodo_user
      - DB_PASSWORD=multodo_password
      - QUEUE_CONNECTION=database
      - MAIL_FROM_ADDRESS=noreply@multodo.com
      - MAIL_FROM_NAME=MultiTodo
    volumes:
      - ./backend:/var/www/html
      - multodo_backend_storage:/var/www/html/storage
    depends_on:
      - postgres
    networks:
      - multodo_network
    command: php artisan queue:work --verbose --tries=3 --timeout=90

volumes:
  multodo_postgres_data:
  multodo_backend_storage:

networks:
  multodo_network:
    driver: bridge
